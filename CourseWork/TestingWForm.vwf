/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CacheClock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Command")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 16;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Command[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("Command[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Command";
}

SIGNAL("CommandAddress")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CommandAddress[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("CommandAddress[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CommandAddress";
}

SIGNAL("Control")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Control[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Control";
}

SIGNAL("Control[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Control";
}

SIGNAL("Control[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Control";
}

SIGNAL("count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("CPUData")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CPUData[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("CPUData[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "CPUData";
}

SIGNAL("Data")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Data[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Data[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Data";
}

SIGNAL("Enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Hit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IP[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IP[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IP";
}

SIGNAL("IR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 27;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("IR[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("IR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "IR";
}

SIGNAL("MemoryAddress")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MemoryAddress[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("MemoryAddress[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MemoryAddress";
}

SIGNAL("ReadCache")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegisteAddress")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegisteAddress[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegisteAddress";
}

SIGNAL("RegisteAddress[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegisteAddress";
}

SIGNAL("RegisteAddress[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegisteAddress";
}

SIGNAL("RegisterControl")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RegisterControl[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegisterControl";
}

SIGNAL("RegisterControl[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegisterControl";
}

SIGNAL("RegisterControl[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RegisterControl";
}

SIGNAL("WriteCache")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("WriteResultCPU")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CacheClock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("Clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 100;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("Command[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 505.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 285.0;
	}
}

TRANSITION_LIST("Command[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 715.0;
		LEVEL 1 FOR 285.0;
	}
}

TRANSITION_LIST("Command[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 420.0;
		LEVEL 0 FOR 495.0;
	}
}

TRANSITION_LIST("Command[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Command[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 85.0;
		LEVEL 0 FOR 915.0;
	}
}

TRANSITION_LIST("CommandAddress[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 35.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("CommandAddress[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 5.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5.0;
			LEVEL Z FOR 35.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 65.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 65.0;
		LEVEL 0 FOR 75.0;
		LEVEL Z FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL Z FOR 20.0;
	}
}

TRANSITION_LIST("Control[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Control[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 90.0;
	}
}

TRANSITION_LIST("Control[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 130.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 60.0;
		}
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 15.0;
	}
}

TRANSITION_LIST("count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 105.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 170.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 110.0;
			LEVEL 0 FOR 100.0;
		}
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 90.0;
		LEVEL 0 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 90.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 15.0;
	}
}

TRANSITION_LIST("count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("CPUData[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 85.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("CPUData[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		LEVEL 1 FOR 15.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("CPUData[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 85.0;
		LEVEL 0 FOR 45.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 95.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("Data[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 240.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 240.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 240.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 240.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Data[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 110.0;
		LEVEL 0 FOR 40.0;
		LEVEL Z FOR 200.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 240.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL Z FOR 90.0;
	}
}

TRANSITION_LIST("Enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 25.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 35.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("Hit")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 85.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 55.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("IP[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IP[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 545.0;
		LEVEL 1 FOR 455.0;
	}
}

TRANSITION_LIST("IP[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 305.0;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 175.0;
	}
}

TRANSITION_LIST("IP[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 125.0;
		LEVEL 1 FOR 180.0;
		LEVEL 0 FOR 170.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 180.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 35.0;
	}
}

TRANSITION_LIST("IP[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 140.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 110.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 35.0;
	}
}

TRANSITION_LIST("IR[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 145.0;
		LEVEL 1 FOR 490.0;
		LEVEL 0 FOR 365.0;
	}
}

TRANSITION_LIST("IR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 505.0;
		LEVEL 1 FOR 495.0;
	}
}

TRANSITION_LIST("IR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 705.0;
	}
}

TRANSITION_LIST("IR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("IR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 295.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 495.0;
	}
}

TRANSITION_LIST("IR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 210.0;
		LEVEL 1 FOR 495.0;
	}
}

TRANSITION_LIST("IR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 85.0;
		LEVEL 1 FOR 915.0;
	}
}

TRANSITION_LIST("IR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 505.0;
		LEVEL 1 FOR 210.0;
		LEVEL 0 FOR 285.0;
	}
}

TRANSITION_LIST("IR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 715.0;
		LEVEL 1 FOR 285.0;
	}
}

TRANSITION_LIST("IR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 715.0;
		LEVEL 1 FOR 285.0;
	}
}

TRANSITION_LIST("MemoryAddress[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 15.0;
			LEVEL Z FOR 15.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 0 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 70.0;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 15.0;
			LEVEL 1 FOR 15.0;
		}
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("MemoryAddress[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL Z FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 30.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 25.0;
		LEVEL 0 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 70.0;
		LEVEL 1 FOR 25.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 55.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 40.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 15.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 5.0;
	}
}

TRANSITION_LIST("ReadCache")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 75.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 5.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 35.0;
			LEVEL 1 FOR 5.0;
		}
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 65.0;
		LEVEL 1 FOR 75.0;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 25.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 20.0;
	}
}

TRANSITION_LIST("RegisteAddress[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 240.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 20.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("RegisteAddress[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 240.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 195.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 180.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 120.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL Z FOR 190.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("RegisteAddress[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 240.0;
		LEVEL 1 FOR 15.0;
		LEVEL Z FOR 195.0;
		LEVEL 0 FOR 15.0;
		LEVEL Z FOR 180.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 120.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL Z FOR 190.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("RegisterControl[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 645.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 120.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 190.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("RegisterControl[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 240.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 195.0;
		LEVEL 1 FOR 15.0;
		LEVEL 0 FOR 535.0;
	}
}

TRANSITION_LIST("RegisterControl[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 245.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 205.0;
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 540.0;
	}
}

TRANSITION_LIST("WriteCache")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("WriteResultCPU")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CacheClock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Command";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "Command[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "Command[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "CommandAddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "Control";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
	CHILDREN = 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "Control[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Control[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "Control[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 34;
}

DISPLAY_LINE
{
	CHANNEL = "count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42;
}

DISPLAY_LINE
{
	CHANNEL = "count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 0;
	CHILDREN = 44, 45, 46, 47, 48, 49, 50, 51, 52;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "CPUData[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 43;
}

DISPLAY_LINE
{
	CHANNEL = "Data";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 0;
	CHILDREN = 54, 55, 56, 57, 58, 59, 60, 61, 62;
}

DISPLAY_LINE
{
	CHANNEL = "Data[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Data[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 53;
}

DISPLAY_LINE
{
	CHANNEL = "Enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Hit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "IP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79;
}

DISPLAY_LINE
{
	CHANNEL = "IP[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IP[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "IR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 80;
	TREE_LEVEL = 0;
	CHILDREN = 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107;
}

DISPLAY_LINE
{
	CHANNEL = "IR[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "IR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 80;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 108;
	TREE_LEVEL = 0;
	CHILDREN = 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "MemoryAddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 108;
}

DISPLAY_LINE
{
	CHANNEL = "ReadCache";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 123;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RegisteAddress";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 124;
	TREE_LEVEL = 0;
	CHILDREN = 125, 126, 127;
}

DISPLAY_LINE
{
	CHANNEL = "RegisteAddress[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "RegisteAddress[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "RegisteAddress[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 124;
}

DISPLAY_LINE
{
	CHANNEL = "RegisterControl";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 128;
	TREE_LEVEL = 0;
	CHILDREN = 129, 130, 131;
}

DISPLAY_LINE
{
	CHANNEL = "RegisterControl[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "RegisterControl[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "RegisterControl[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 128;
}

DISPLAY_LINE
{
	CHANNEL = "WriteCache";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 132;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "WriteResultCPU";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 133;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 29250;
	MASTER = TRUE;
}
;
